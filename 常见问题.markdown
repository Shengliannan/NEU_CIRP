## Q:前台传入插入数据库请求时数据库内插入数据为乱码。  
A:jdbc.properties中，url=jdbc:mysql:{你的数据库地址}?useUnicode=true&characterEncoding=UTF-8。

## Q:测试方法执行时间长
问题定位：
（1）sql语句的执行时间：
发现执行时间在5毫秒左右，不是sql编写问题（没走主键，查询无用字段）
```sql
select
i.id,i.user_id,i.type_id,i.location,i.topic,i.content,i.yn,i.ts,i.createDate,i.deleteDate,t.readNum
from
information i
,(select info_id,count(*) as readNum from info_fav_read group by info_id) t
where
i.id=t.info_id order by readNUm desc,createDate desc;
```
（2）是否mybatis懒加载设置引起
配置mybatis懒加载
```xml
mybatis-config.xml
<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <!-- <property name="mapperLocations" value="classpath:mapping/*.xml"></property>-->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
    </bean>

sqlMapConfig.xml
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration> <!--配置 -->
    <properties/> <!--属性-->
    <settings> <!--设置-->

        <!--懒加载-->
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    <!-- 配置mapper扫描器 -->
    <mappers>
        <mapper resource="mapping/BehaviorMapper.xml"/>
        <mapper resource="mapping/InfoFavReadMapper.xml"/>
        <mapper resource="mapping/InformationMapper.xml"/>
        <mapper resource="mapping/TypeInfoMapper.xml"/>
        <mapper resource="mapping/UserMapper.xml"/>
    </mappers>
</configuration>
```
配置懒加载后发现时间并没有明显提高
```java
    @Test
    public void selectByExampleOrderByViewAndTime() {
        InformationExample example = new InformationExample();
        InformationExample.Criteria criteria = example.createCriteria();
        long startTime = System.currentTimeMillis();
        List<Information> list = mapper.selectByExampleOrderByViewAndTime(example);
        long endTime = System.currentTimeMillis();
        System.out.println("程序运行时间：" + (endTime - startTime) + "ms"); //输出程序运行时间

        System.out.println(list.size());
        for (Information i : list
        ) {
            System.out.println(i.getId());
            System.out.println(i.getCount());
            System.out.println(i.getUser().getUsername());
            System.out.println(i.getTypeInfo().getName());
        }
    }
```
(3) 由于mysql服务器搭建在阿里云上，是否远程查询时间太长
使用本地数据库，发现执行时间快了0.5秒

可是采用本地数据测试还是：‘程序运行时间：1234ms’
还是很长，这个问题待解决。

## Q:java.lang.IllegalArgumentException: Could not resolve placeholder 'XXX' in string value "${XXX}";

原因：多个配置文件都加载了placeholder冲突，解决办法，把多个配置文件合成一个

> [参考](https://blog.csdn.net/qq_39056805/article/details/80586672 )

## Q: spring-data-redis以及jedis版本问题

Caused by: java.lang.NoSuchMethodError: org.springframework.core.serializer.support.DeserializingConverter.<init>(Ljava/lang/ClassLoader;)V 

at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.<init>(JdkSerializationRedisSerializer.java:54)

```xml
<!-- 以下配置可用 -->
<dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-redis</artifactId>
    <version>1.4.2.RELEASE</version>
</dependency>

<dependency>
    <groupId>redis.clients</groupId>
    <artifactId>jedis</artifactId>
    <version>2.6.2</version>
</dependency>

<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-pool2</artifactId>
    <version>2.4.2</version>
</dependency>
```

